class Solution {
    ListNode ReverseLL(ListNode head){
        if(head == null || head.next == null){
            return head;
        }
        ListNode last = ReverseLL(head.next);
        head.next.next = head;
        head.next = null;
        return last;
    }
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        l1 = ReverseLL(l1);
        l2 = ReverseLL(l2);

        int sum = 0;
        int carry = 0;
        ListNode ans = new ListNode();

        while(l1 != null || l2 != null){
            if(l1 != null){
                sum += l1.val;
                l1 = l1.next;
            }
            if(l2 != null){
                sum += l2.val;
                l2 = l2.next;
            }
            ans.val = sum%10;
            carry = sum / 10;

            ListNode newNode = new ListNode(carry);
            newNode.next = ans;
            ans = newNode;
            sum = carry;
        }
        return carry == 0 ? ans.next : ans;
    }
}
