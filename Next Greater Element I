class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        int n = nums2.length;
        HashMap<Integer, Integer> ngeMap = new HashMap<>(); // To store the next greater element for each num in nums2
        Stack<Integer> st = new Stack<>();
        
        // Traverse nums2 from right to left to fill the ngeMap
        for (int i = n - 1; i >= 0; i--) {
            while (!st.isEmpty() && st.peek() <= nums2[i]) {
                st.pop();
            }

            if (!st.isEmpty()) {
                ngeMap.put(nums2[i], st.peek());
            } else {
                ngeMap.put(nums2[i], -1);
            }

            st.push(nums2[i]);
        }

        // Now fill the result array for nums1 based on ngeMap
        int[] result = new int[nums1.length];
        for (int i = 0; i < nums1.length; i++) {
            result[i] = ngeMap.get(nums1[i]);
        }

        return result;
    }
}
