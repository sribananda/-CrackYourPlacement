class Solution
{
    //Function to evaluate a postfix expression.
    public static int evaluatePostFix(String S)
    {
        // Your code here
        Stack<Integer> stack = new Stack<>();

        for (int i = 0; i < S.length(); i++) {
            char c = S.charAt(i);

            // If the current character is a digit, push it to the stack
            if (Character.isDigit(c)) {
                stack.push(c - '0');
            } 
            // If the current character is an operator, pop two elements from the stack,
            // apply the operator, and push the result back to the stack
            else {
                int val1 = stack.pop();
                int val2 = stack.pop();

                switch (c) {
                    case '+':
                        stack.push(val2 + val1);
                        break;
                    case '-':
                        stack.push(val2 - val1);
                        break;
                    case '*':
                        stack.push(val2 * val1);
                        break;
                    case '/':
                        stack.push(val2 / val1);
                        break;
                }
            }
        }
        // The final result is the only element left in the stack
        return stack.pop();
    }
}
